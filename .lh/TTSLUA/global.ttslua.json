{
    "sourceFile": "TTSLUA/global.ttslua",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1737144456722,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1737144463871,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,10 +39,10 @@\n redVPCounter_GUID = \"8b0541\"\n blueVPCounter_GUID = \"a77a54\"\n redCPCounter_GUID = \"e446f7\"\n blueCPCounter_GUID = \"deb9f2\"\n-redCPCounter_GUID = \"e446f7\"\n-blueCPCounter_GUID = \"deb9f2\"\n+oragnePCounter_GUID = \"e446f7\"\n+purpleCPCounter_GUID = \"deb9f2\"\n redTurnCounter_GUID = \"055302\"\n blueTurnCounter_GUID = \"7e4111\"\n gameTurnCounter_GUID = \"ee92cf\"\n scoresheet_GUID = \"06d627\"\n"
                },
                {
                    "date": 1737144475971,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,10 +39,10 @@\n redVPCounter_GUID = \"8b0541\"\n blueVPCounter_GUID = \"a77a54\"\n redCPCounter_GUID = \"e446f7\"\n blueCPCounter_GUID = \"deb9f2\"\n-oragnePCounter_GUID = \"e446f7\"\n-purpleCPCounter_GUID = \"deb9f2\"\n+oragnePCounter_GUID = \"7ab1ac\"\n+purpleCPCounter_GUID = \"718ca\"\n redTurnCounter_GUID = \"055302\"\n blueTurnCounter_GUID = \"7e4111\"\n gameTurnCounter_GUID = \"ee92cf\"\n scoresheet_GUID = \"06d627\"\n"
                },
                {
                    "date": 1737144559171,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,10 +39,10 @@\n redVPCounter_GUID = \"8b0541\"\n blueVPCounter_GUID = \"a77a54\"\n redCPCounter_GUID = \"e446f7\"\n blueCPCounter_GUID = \"deb9f2\"\n-oragnePCounter_GUID = \"7ab1ac\"\n-purpleCPCounter_GUID = \"718ca\"\n+oragnePCounter_GUID = \"25fc4a\"\n+purpleCPCounter_GUID = \"718aca\"\n redTurnCounter_GUID = \"055302\"\n blueTurnCounter_GUID = \"7e4111\"\n gameTurnCounter_GUID = \"ee92cf\"\n scoresheet_GUID = \"06d627\"\n"
                },
                {
                    "date": 1737144607199,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,588 @@\n+--[[ Lua code. See documentation: https://api.tabletopsimulator.com/ --]]\n+\n+-- Having all these GUIDs centrally managed helps to ensure that any changes to\n+-- them only need to be made in one place, and hard-to-find stuff isn't inadvertently\n+-- broken.\n+--\n+-- If you're looking at this and thinking \"surely this should be a table\" - why,\n+-- yes it should. Unfortunately, I saw the documentation for Object.getVar said\n+-- \"Cannot return a table\", and missed that Object.getTable existed, and now I'm\n+-- too lazy to change it all again.\n+centerCircle_GUID = \"51ee2f\"\n+quarterCircle_GUID = \"51ee3f\"\n+templateObjective_GUID = \"573333\"\n+startMenu_GUID = \"738804\"\n+redDiceMat_GUID = \"c57d70\" -- diceTable\n+blueDiceMat_GUID = \"a84ed2\" -- diceTable\n+redDiceRoller_GUID = \"beae28\" -- kustom40kDiceRoller\n+blueDiceRoller_GUID = \"4e0e0b\" -- kustom40kDiceRoller\n+redMissionManager_GUID = \"cff35b\"\n+blueMissionManager_GUID = \"471de1\"\n+\n+-- Hutber IDs\n+redControlBoard_GUID = \"5a328f\"\n+blueControlBoard_GUID = \"32ed4c\"\n+\n+RedSelectionHighlighter = \"27de4f\"\n+BlueSelectionHighlighter = \"84c3a4\"\n+\n+redCustomDiceMat_GUID = \"acae21\" -- diceTable\n+blueCustomDiceMat_GUID = \"839fcc\" -- diceTable\n+\n+redCustomDiceRoller_GUID = \"17ca2b\" -- kustom40kDiceRoller\n+blueCustomDiceRoller_GUID = \"927ca1\" -- kustom40kDiceRoller\n+\n+RedVortexGUID = \"be2cdb\"\n+BlueVortexGUID = \"4b1a7b\"\n+\n+-- End Hutber IDS\n+redVPCounter_GUID = \"8b0541\"\n+blueVPCounter_GUID = \"a77a54\"\n+redCPCounter_GUID = \"e446f7\"\n+blueCPCounter_GUID = \"deb9f2\"\n+orangePCounter_GUID = \"25fc4a\"\n+purpleCPCounter_GUID = \"61c2f8\"\n+redTurnCounter_GUID = \"055302\"\n+blueTurnCounter_GUID = \"7e4111\"\n+gameTurnCounter_GUID = \"ee92cf\"\n+scoresheet_GUID = \"06d627\"\n+blankObjCard_GUID = \"d618cb\"\n+activation_GUID = \"229946\"\n+wounds_GUID = \"ad63ba\"\n+\n+table_GUID = \"948ce5\"\n+felt_GUID = \"28865a\"\n+mat_GUID = \"4ee1f2\"\n+matURLDisplay_GUID = \"c5e288\"\n+flexControl_GUID = \"bd69bd\"\n+tableLeg1_GUID = \"afc863\"\n+tableLeg2_GUID = \"c8edca\"\n+tableLeg3_GUID = \"393bf7\"\n+tableLeg4_GUID = \"12c65e\"\n+tableSideBottom_GUID = \"f938a2\"\n+tableSideTop_GUID = \"35b95f\"\n+tableSideLeft_GUID = \"9f95fd\"\n+tableSideRight_GUID = \"5af8f2\"\n+extractTerrain_GUID = \"70b9f6\"\n+\n+redHandZone_GUID = \"f7d85a\"\n+blueHandZone_GUID = \"731345\"\n+redHiddenZone_GUID = \"28419e\"\n+blueHiddenZone_GUID = \"e1e91a\"\n+deploymentCardZone_GUID = \"dcf95b\"\n+missionCardZone_GUID = \"cdecf2\"\n+primaryCardZone_GUID = \"740abc\"\n+secondary11CardZone_GUID = \"0ec215\"\n+secondary12CardZone_GUID = \"d865d4\"\n+secondary21CardZone_GUID = \"3c8d71\"\n+secondary22CardZone_GUID = \"88cac4\"\n+\n+CPMissionBook_GUID = \"731ec4\"\n+\n+--[[\n+GUID reference for primary / mission / deployment cards\n+Yeah, I could use variables but I didn't, oh well\n+\n+Leviathan:\n+----------\n+\n+Sites of Power ec78cd\n+Scorched Earth 3ad5a3\n+Purge the Foe 5444d4\n+Priority Targets f97708\n+Deploy Servo-Skulls 44ff29\n+Take and Hold 884291\n+Supply Drop a34ae1\n+The Ritual 646b49\n+Vital Ground 6fc1c2\n+\n+Chilling Rain db0022\n+Hidden Supplies 0dc3c3\n+Scrambler Fields aea986\n+Chosen Battlefield 876ac7\n+\n+Hammer and Anvil 117c77\n+Dawn of War 7e4b95\n+Sweeping Engagement 381d7c\n+Search and Destroy ad4220\n+Crucible of Battle 3c0679\n+\n+Pariah Nexus:\n+-------------\n+\n+Burden of Trust 85718e\n+Linchpin 540fd0\n+Purge the Foe d9d35a\n+Scorched Earth 6860de\n+Supply Drop 981226\n+Take and Hold bffd57\n+Terraform 7fa6d0\n+The Ritual 7067e2\n+Unexploded Ordnance 41f293\n+\n+Adapt or Die 9650f1\n+Fog of War c58f11\n+Hidden Supplies c4fe8c\n+Inspired Leadership 499169\n+Prepared Positions 9789b7\n+Raise Banners 62e744\n+Rapid Escalation d35008\n+Smoke and Mirrors 25b5a6\n+Stalwarts 8b7dbc\n+Swift Action dc273c\n+\n+Crucible of Battle e96d18\n+Dawn of War 7f45dc\n+Hammer and Anvil 97f3f0\n+Search and Destroy 09c961\n+Sweeping Engagement c6edf3\n+Tipping Point 77cde6\n+\n+]]--\n+\n+MISSION_PACK_LEVIATHAN = 1\n+MISSION_PACK_PARIAH_NEXUS = 2\n+packSelected = nil\n+missionPackData = {\n+    {\n+        id = MISSION_PACK_LEVIATHAN,\n+        name = \"Leviathan\",\n+        deploymentDeck_GUID = \"a30deb\",\n+        missionDeck_GUID = \"1665ca\",\n+        primaryDeck_GUID = \"3ca4a6\",\n+        gambitDeck_GUID = \"d0a9f9\",\n+        fixedSecondaryDeck_GUID = \"30c8fe\",\n+        redSecondaryDeck_GUID = \"2c6243\",\n+        blueSecondaryDeck_GUID = nil,\n+        tournamentMissions = {\n+            -- Take and Hold / Chilling Rain / Search and Destroy\n+            {name = \"A\", primary = \"884291\", mission = \"db0022\", deployment = \"ad4220\"},\n+            -- Priority Targets / Hidden Supplies / Search and Destroy\n+            {name = \"B\", primary = \"f97708\", mission = \"0dc3c3\", deployment = \"ad4220\"},\n+            -- The Ritual / Scrambler Fields / Sweeping Engagement\n+            {name = \"C\", primary = \"646b49\", mission = \"aea986\", deployment = \"381d7c\"},\n+            -- Deploy Servo-skulls / Chilling Rain / Search and Destroy\n+            {name = \"D\", primary = \"44ff29\", mission = \"db0022\", deployment = \"ad4220\"},\n+            -- Take and Hold / Chosen Battlefield / Sweeping Engagement\n+            {name = \"E\", primary = \"884291\", mission = \"876ac7\", deployment = \"381d7c\"},\n+            -- Supply Drop / Chilling Rain / Search and Destroy\n+            {name = \"F\", primary = \"a34ae1\", mission = \"db0022\", deployment = \"ad4220\"},\n+            -- Sites of Power / Chilling Rain / Hammer and Anvil\n+            {name = \"G\", primary = \"ec78cd\", mission = \"db0022\", deployment = \"117c77\"},\n+            -- The Ritual / Chilling Rain / Hammer and Anvil\n+            {name = \"H\", primary = \"646b49\", mission = \"db0022\", deployment = \"117c77\"},\n+            -- Take and Hold / Hidden Supplies / Hammer and Anvil\n+            {name = \"I\", primary = \"884291\", mission = \"0dc3c3\", deployment = \"117c77\"},\n+            -- Priority Targets / Chilling Rain / Crucible of Battle\n+            {name = \"J\", primary = \"f97708\", mission = \"db0022\", deployment = \"3c0679\"},\n+            -- Deploy Servo-skulls / Hidden Supplies / Crucible of Battle\n+            {name = \"K\", primary = \"44ff29\", mission = \"0dc3c3\", deployment = \"3c0679\"},\n+            -- Scorched Earth / Chilling Rain / Dawn of War\n+            {name = \"L\", primary = \"3ad5a3\", mission = \"db0022\", deployment = \"7e4b95\"},\n+            -- Purge the Foe / Chilling Rain / Crucible of Battle\n+            {name = \"M\", primary = \"5444d4\", mission = \"db0022\", deployment = \"3c0679\"},\n+            -- Priority Targets / Chosen Battlefield / Dawn of War\n+            {name = \"N\", primary = \"f97708\", mission = \"876ac7\", deployment = \"7e4b95\"},\n+            -- Vital Ground / Chilling Rain / Crucible of Battle\n+            {name = \"O\", primary = \"6fc1c2\", mission = \"db0022\", deployment = \"3c0679\"}\n+        }\n+    },\n+    {\n+        id = MISSION_PACK_PARIAH_NEXUS,\n+        name = \"Pariah Nexus\",\n+        deploymentDeck_GUID = \"2dc2e8\",\n+        missionDeck_GUID = \"ffdf05\",\n+        primaryDeck_GUID = \"d26e9c\",\n+        gambitDeck_GUID = \"79d2ae\",\n+        fixedSecondaryDeck_GUID = \"b55459\",\n+        redSecondaryDeck_GUID = \"c0fb49\",\n+        blueSecondaryDeck_GUID = nil,\n+        tournamentMissions = {\n+            -- A: Take and Hold / Raise Banners / Tipping Point\n+            {name = \"A\", primary = \"bffd57\", mission = \"62e744\", deployment = \"77cde6\"},\n+            -- B: Purge the Foe / Smoke and Mirrors / Tipping Point\n+            {name = \"B\", primary = \"d9d35a\", mission = \"25b5a6\", deployment = \"77cde6\"},\n+            -- C: Linchpin / Fog of War / Tipping Point\n+            {name = \"C\", primary = \"540fd0\", mission = \"c58f11\", deployment = \"77cde6\"},\n+            -- D: Scorched Earth / Swift Action / Tipping Point\n+            {name = \"D\", primary = \"6860de\", mission = \"dc273c\", deployment = \"77cde6\"},\n+            -- E: Take and Hold / Prepared Positions / Hammer and Anvil\n+            {name = \"E\", primary = \"bffd57\", mission = \"9789b7\", deployment = \"97f3f0\"},\n+            -- F: Burden of Trust / Hidden Supplies / Hammer and Anvil\n+            {name = \"F\", primary = \"85718e\", mission = \"c4fe8c\", deployment = \"97f3f0\"},\n+            -- G: The Ritual / Stalwarts / Hammer and Anvil\n+            {name = \"G\", primary = \"7067e2\", mission = \"8b7dbc\", deployment = \"97f3f0\"},\n+            -- H: Supply Drop / Smoke and Mirrors / Hammer and Anvil\n+            {name = \"H\", primary = \"981226\", mission = \"25b5a6\", deployment = \"97f3f0\"},\n+            -- I: Burden of Trust / Prepared Positions / Search and Destroy\n+            {name = \"I\", primary = \"85718e\", mission = \"9789b7\", deployment = \"09c961\"},\n+            -- J: Linchpin / Raise Banners / Search and Destroy\n+            {name = \"J\", primary = \"540fd0\", mission = \"62e744\", deployment = \"09c961\"},\n+            -- K: Scorched Earth / Stalwarts / Search and Destroy\n+            {name = \"K\", primary = \"6860de\", mission = \"8b7dbc\", deployment = \"09c961\"},\n+            -- L: Take and Hold / Hidden Supplies / Search and Destroy\n+            {name = \"L\", primary = \"bffd57\", mission = \"c4fe8c\", deployment = \"09c961\"},\n+            -- M: Purge the Foe / Rapid Escalation / Crucible of Battle\n+            {name = \"M\", primary = \"d9d35a\", mission = \"d35008\", deployment = \"e96d18\"},\n+            -- N: The Ritual / Swift Action / Crucible of Battle\n+            {name = \"N\", primary = \"7067e2\", mission = \"dc273c\", deployment = \"e96d18\"},\n+            -- O: Terraform / Stalwarts / Crucible of Battle\n+            {name = \"O\", primary = \"7fa6d0\", mission = \"8b7dbc\", deployment = \"e96d18\"},\n+            -- P: Scorched Earth / Inspired Leadership / Crucible of Battle\n+            {name = \"P\", primary = \"6860de\", mission = \"499169\", deployment = \"e96d18\"},\n+            -- Q: Supply Drop / Rapid Escalation / Sweeping Engagement\n+            {name = \"Q\", primary = \"981226\", mission = \"d35008\", deployment = \"c6edf3\"},\n+            -- R: Terraform / Swift Action / Sweeping Engagement\n+            {name = \"R\", primary = \"7fa6d0\", mission = \"dc273c\", deployment = \"c6edf3\"},\n+            -- S: Linchpin / Raise Banners / Dawn of War\n+            {name = \"S\", primary = \"540fd0\", mission = \"62e744\", deployment = \"7f45dc\"},\n+            -- T: Unexploded Ordnance / Inspired Leadership / Dawn of War\n+            {name = \"T\", primary = \"41f293\", mission = \"499169\", deployment = \"7f45dc\"}\n+        }\n+    },\n+}\n+\n+turnOrder = {}\n+nonPlaying = {\"White\", \"Brown\",\"Orange\",\"Yellow\",\"Green\",\"Teal\",\"Purple\",\"Pink\"}\n+allowMenu = true\n+allowAutoSeat = true\n+redPlayerID = \"\"\n+bluePlayerID = \"\"\n+redDiceSpawnTime = \"slow\"\n+blueDiceSpawnTime = \"slow\"\n+\n+function onSave()\n+    blueSecondaryDeckGUID = nil\n+    if packSelected then\n+        blueSecondaryDeckGUID = missionPackData[packSelected].blueSecondaryDeck_GUID\n+    end\n+    saved_data = JSON.encode({\n+        svredPlayerID = redPlayerID,\n+        svbluePlayerID = bluePlayerID,\n+        svPackSelected = packSelected,\n+        svBlueSecondaryDeckGUID = blueSecondaryDeckGUID\n+    })\n+    --saved_data = \"\"\n+    return saved_data\n+end\n+\n+function onLoad(saved_data)\n+    Turns.enable=false\n+    --- load vars from saved\n+    if saved_data ~= \"\" then\n+         local loaded_data = JSON.decode(saved_data)\n+         redPlayerID = loaded_data.svredPlayerID\n+         bluePlayerID = loaded_data.svbluePlayerID\n+         packSelected = loaded_data.svPackSelected\n+         if packSelected then\n+            missionPackData[packSelected].blueSecondaryDeck_GUID = loaded_data.svBlueSecondaryDeckGUID\n+         end\n+    else\n+        redPlayerID = \"\"\n+        bluePlayerID = \"\"\n+        packSelected = nil\n+    end\n+    ---- end loading\n+    if allowMenu then\n+        if allowAutoSeat and redPlayerID ~= \"\" and bluePlayerID ~= \"\" then --  if the game is not started dont autoseat\n+                autoSeatAll()\n+        else\n+            Global.UI.setAttribute(\"main\", \"active\", \"true\")\n+            local presentPersons= Player.getPlayers()\n+            for i, person in ipairs(presentPersons) do\n+                person.team=\"Diamonds\"\n+            end\n+            presentPersons= Player.getSpectators()\n+            for i, person in ipairs(presentPersons) do\n+                person.team=\"Diamonds\"\n+            end\n+            showHideRedBlueBtn()\n+        end\n+    else\n+        Global.UI.setAttribute(\"main\", \"active\", \"false\")\n+    end\n+end\n+\n+function setMissionPack(params)\n+    packSelected = params.pack\n+    redSecondaryDeck = getObjectFromGUID(missionPackData[packSelected].redSecondaryDeck_GUID)\n+    blueSecondaryDeck = redSecondaryDeck.clone({position = redSecondaryDeck.getPosition()})\n+    missionPackData[packSelected].blueSecondaryDeck_GUID = blueSecondaryDeck.getGUID()\n+end\n+\n+function autoSeatPerson(_person)\n+    if _person.steam_id == redPlayerID then\n+        if Player.Red.seated then\n+            Player.Red.changeColor(\"Grey\")\n+        end\n+        _person.changeColor(\"Red\")\n+        _person.team=\"None\"\n+        return\n+    end\n+    if _person.steam_id == bluePlayerID then\n+        if Player.Blue.seated then\n+            Player.Blue.changeColor(\"Grey\")\n+        end\n+        _person.changeColor(\"Blue\")\n+        _person.team=\"None\"\n+        return\n+    end\n+    --_person.changeColor(\"Grey\")\n+    _person.team=\"None\"\n+end\n+\n+function autoSeatGroup(persons)\n+    for i, person in ipairs(persons) do\n+        autoSeatPerson(person)\n+    end\n+end\n+\n+function autoSeatAll()\n+    if redPlayerID==\"\" or bluePlayerID==\"\" then --  if the game is not started dont autoseat\n+        return\n+    end\n+    local presents = Player.getPlayers()\n+    autoSeatGroup(presents)\n+    presents = Player.getSpectators()\n+    autoSeatGroup(presents)\n+end\n+\n+function recordPlayers()\n+    redPlayerID = Player.Red.steam_id\n+    bluePlayerID = Player.Blue.steam_id\n+end\n+\n+function onPlayerChangeColor(player_color)\n+    promotePlayers()\n+    --demotePlayers()  -- RIC\n+    showHideRedBlueBtn()\n+end\n+\n+function onPlayerConnect(player_id)\n+    if allowMenu then\n+        if allowAutoSeat and redPlayerID ~= \"\" and bluePlayerID ~= \"\" then --  if the game is not started dont autoseat\n+                autoSeatPerson(player_id)\n+        else\n+        player_id.team=\"Diamonds\"\n+        end\n+    end\n+end\n+\n+function promotePlayers()\n+    local colors={\"Red\", \"Blue\", \"Orange\", \"Yellow\", \"Purple\", \"Teal\"}\n+    for i, color in ipairs(colors) do\n+        if Player[color].seated and  Player[color].host == false and not Player[color].promoted then\n+            Player[color].promote()\n+        end\n+    end\n+end\n+\n+function demotePlayers()\n+    for i, color in ipairs(nonPlaying) do\n+        if Player[color].seated  and Player[color].host == false then\n+            Player[color].promote(false)\n+        end\n+    end\n+    local spectators=Player.getSpectators()\n+    for i, person in ipairs(spectators) do\n+        if person.host == false then\n+            person.promote(false)\n+        end\n+    end\n+end\n+\n+function promotePlayersOnConnect()  --NOT USED\n+    if player_color == \"Red\" or player_color == \"Blue\"  then\n+        Player[\"Red\"].promote(true)\n+        Player[\"Blue\"].promote(true)\n+    end\n+end\n+\n+function showHideRedBlueBtn()\n+    if allowMenu then\n+        if Player.Red.seated == true then\n+            Global.UI.setAttribute(\"redBtn\", \"active\", \"false\")\n+        else\n+            Global.UI.setAttribute(\"redBtn\", \"active\", \"true\")\n+        end\n+        if Player.Blue.seated == true then\n+            Global.UI.setAttribute(\"blueBtn\", \"active\", \"false\")\n+        else\n+            Global.UI.setAttribute(\"blueBtn\", \"active\", \"true\")\n+        end\n+    end\n+end\n+\n+function setViewForPlayer(player, color)\n+    if color==\"Grey\" then return end\n+    local pos= {0,0,0}\n+    if color == \"Red\" then\n+        pos = getObjectFromGUID(redDiceMat_GUID).getPosition()\n+    end\n+    if color == \"Blue\" then\n+        pos = getObjectFromGUID(blueDiceMat_GUID).getPosition()\n+    end\n+    player.lookAt({\n+        position = pos,\n+        pitch    = 25,\n+        yaw      = 180,\n+        distance = 20,\n+        })\n+end\n+\n+function onScriptingButtonDown(index, playerColor)\n+    if index == 1 then\n+        -- If '=' is bound to scripting button 1\n+        local diceMat = getObjectFromGUID(redCustomDiceMat_GUID)\n+        diceMat.call(\"changeSustainedHitsThreshold\", { 1 })\n+    elseif index == 2 then\n+        -- If '-' is bound to scripting button 2\n+        local diceMat = getObjectFromGUID(redCustomDiceMat_GUID)\n+        diceMat.call(\"changeSustainedHitsThreshold\", { -1 })\n+    end\n+end\n+\n+function placeToColor(player, color)\n+    player.changeColor(color)\n+    player.team=\"None\"\n+    broadcastToColor(\"READ INSTRUCTIONS FIRST!\\n(Click Notebook at the top)\", color, \"Purple\")\n+    --setViewForPlayer(player, color) --bugged\n+end\n+\n+function placeToRed(player, value, id)\n+    placeToColor(player, \"Red\")\n+    --player.changeColor(\"Red\")\n+    --player.team=\"None\"\n+end\n+\n+function placeToBlue(player, value, id)\n+    placeToColor(player, \"Blue\")\n+    --player.changeColor(\"Blue\")\n+    --player.team=\"None\"\n+end\n+function placeToGray(player, value, id)\n+    placeToColor(player, \"Grey\")\n+    local selectPariahNexus = Global.getVar(\"selectPariahNexus\")\n+    if selectPariahNexus then\n+        selectPariahNexus()\n+    else\n+        print(\"Error: selectPariahNexus function not found!\")\n+    end\n+end\n+\n+function closeMenu(player, value, id)\n+    player.team=\"None\"\n+    broadcastToColor(\"READ INSTRUCTIONS FIRST!\\n(Click Notebook at the top)\", player.color, \"Purple\")\n+end\n+\n+backPosition={{0,0,0},{0,0,0},{0,0,0},{0,0,0}}\n+function goToDiceRoller(player)\n+    local matPositionOffset=12\n+    local color=player.color\n+    local diceMatGUID=redDiceMat_GUID\n+    local i=1\n+    if color == \"Red\" then\n+        i=1\n+    end\n+    if color == \"Orange\" then\n+        i=2\n+    end\n+    if color == \"Blue\" then\n+        diceMatGUID = blueDiceMat_GUID\n+        i=3\n+        matPositionOffset=-matPositionOffset\n+    end\n+    if color == \"Teal\" then\n+        diceMatGUID = blueDiceMat_GUID\n+        i=4\n+        matPositionOffset=-matPositionOffset\n+    end\n+    if Player[color].getSelectedObjects()[1] ~= nil then\n+        backPosition[i]=Player[color].getSelectedObjects()[1].getPosition()\n+    end\n+\n+    local matPos=getObjectFromGUID(diceMatGUID).getPosition()\n+    matPos.x=matPos.x+matPositionOffset\n+    moveCameraTo(matPos,30,color)\n+end\n+function goToScoreBoard(player)\n+    local matPositionOffset = 0 -- Define matPositionOffset with a default value\n+    local color = player.color\n+    local matPos = getObjectFromGUID(\"06d627\").getPosition()\n+    matPos.x = matPos.x + matPositionOffset\n+     moveCameraTo(matPos, 30, color, 90)\n+end\n+\n+function goToSquad(player)\n+    local i = 1\n+    local color=player.color\n+    if color == \"Red\" then\n+        i=1\n+    end\n+    if color == \"Orange\" then\n+        i=2\n+    end\n+    if color == \"Blue\" then\n+        i=3\n+    end\n+    if color == \"Teal\" then\n+        i=4\n+    end\n+    moveCameraTo(backPosition[i], 20, color)\n+end\n+\n+function moveCameraTo(pos, dist, color, pitchOverride)\n+    local rot = {0, 0, 0} -- Default rotation\n+\n+    if color == \"Red\" or color == \"Orange\" then\n+        rot = {0, 180, 0}\n+    elseif color == \"Blue\" or color == \"Teal\" then\n+        rot = {0, 0, 0}\n+    end\n+\n+    if pos[2] == 0 then\n+        dist = dist + 30\n+    end\n+\n+    local yaw = pitchOverride or rot[2]\n+\n+    Player[color].lookAt({\n+        position = pos,\n+        pitch = 90,\n+        yaw = yaw,\n+        distance = dist\n+    })\n+end\n+\n+function moveAllFromZoneToDeck(params)\n+    local zoneObj = getObjectFromGUID(Global.getVar(params.zone .. \"CardZone_GUID\"))\n+    local deckObj = getObjectFromGUID(missionPackData[packSelected][params.deck .. \"Deck_GUID\"])\n+\n+    local objects = zoneObj.getObjects()\n+    for _,object in ipairs(objects) do\n+        object.locked = false\n+        deckObj.putObject(object)\n+    end\n+\n+    deckObj.shuffle()\n+end\n+\n+function moveOneFromDeckToZone(params)\n+    local zoneObj = getObjectFromGUID(Global.getVar(params.zone .. \"CardZone_GUID\"))\n+    local deckObj = getObjectFromGUID(missionPackData[packSelected][params.deck .. \"Deck_GUID\"])\n+    local takeParams = {}\n+    takeParams.position = zoneObj.getPosition()\n+    takeParams.flip = true\n+    takeParams.smooth = true\n+    takeParams.callback_function = function(card)\n+        Wait.frames(function()\n+            card.locked = true\n+        end)\n+    end\n+    if params[\"card\"] then\n+        takeParams.guid = params.card\n+    else\n+        deckObj.shuffle()\n+    end\n+    deckObj.takeObject(takeParams)\n+end\n"
                }
            ],
            "date": 1737144456722,
            "name": "Commit-0",
            "content": "--[[ Lua code. See documentation: https://api.tabletopsimulator.com/ --]]\n\n-- Having all these GUIDs centrally managed helps to ensure that any changes to\n-- them only need to be made in one place, and hard-to-find stuff isn't inadvertently\n-- broken.\n--\n-- If you're looking at this and thinking \"surely this should be a table\" - why,\n-- yes it should. Unfortunately, I saw the documentation for Object.getVar said\n-- \"Cannot return a table\", and missed that Object.getTable existed, and now I'm\n-- too lazy to change it all again.\ncenterCircle_GUID = \"51ee2f\"\nquarterCircle_GUID = \"51ee3f\"\ntemplateObjective_GUID = \"573333\"\nstartMenu_GUID = \"738804\"\nredDiceMat_GUID = \"c57d70\" -- diceTable\nblueDiceMat_GUID = \"a84ed2\" -- diceTable\nredDiceRoller_GUID = \"beae28\" -- kustom40kDiceRoller\nblueDiceRoller_GUID = \"4e0e0b\" -- kustom40kDiceRoller\nredMissionManager_GUID = \"cff35b\"\nblueMissionManager_GUID = \"471de1\"\n\n-- Hutber IDs\nredControlBoard_GUID = \"5a328f\"\nblueControlBoard_GUID = \"32ed4c\"\n\nRedSelectionHighlighter = \"27de4f\"\nBlueSelectionHighlighter = \"84c3a4\"\n\nredCustomDiceMat_GUID = \"acae21\" -- diceTable\nblueCustomDiceMat_GUID = \"839fcc\" -- diceTable\n\nredCustomDiceRoller_GUID = \"17ca2b\" -- kustom40kDiceRoller\nblueCustomDiceRoller_GUID = \"927ca1\" -- kustom40kDiceRoller\n\nRedVortexGUID = \"be2cdb\"\nBlueVortexGUID = \"4b1a7b\"\n\n-- End Hutber IDS\nredVPCounter_GUID = \"8b0541\"\nblueVPCounter_GUID = \"a77a54\"\nredCPCounter_GUID = \"e446f7\"\nblueCPCounter_GUID = \"deb9f2\"\nredCPCounter_GUID = \"e446f7\"\nblueCPCounter_GUID = \"deb9f2\"\nredTurnCounter_GUID = \"055302\"\nblueTurnCounter_GUID = \"7e4111\"\ngameTurnCounter_GUID = \"ee92cf\"\nscoresheet_GUID = \"06d627\"\nblankObjCard_GUID = \"d618cb\"\nactivation_GUID = \"229946\"\nwounds_GUID = \"ad63ba\"\n\ntable_GUID = \"948ce5\"\nfelt_GUID = \"28865a\"\nmat_GUID = \"4ee1f2\"\nmatURLDisplay_GUID = \"c5e288\"\nflexControl_GUID = \"bd69bd\"\ntableLeg1_GUID = \"afc863\"\ntableLeg2_GUID = \"c8edca\"\ntableLeg3_GUID = \"393bf7\"\ntableLeg4_GUID = \"12c65e\"\ntableSideBottom_GUID = \"f938a2\"\ntableSideTop_GUID = \"35b95f\"\ntableSideLeft_GUID = \"9f95fd\"\ntableSideRight_GUID = \"5af8f2\"\nextractTerrain_GUID = \"70b9f6\"\n\nredHandZone_GUID = \"f7d85a\"\nblueHandZone_GUID = \"731345\"\nredHiddenZone_GUID = \"28419e\"\nblueHiddenZone_GUID = \"e1e91a\"\ndeploymentCardZone_GUID = \"dcf95b\"\nmissionCardZone_GUID = \"cdecf2\"\nprimaryCardZone_GUID = \"740abc\"\nsecondary11CardZone_GUID = \"0ec215\"\nsecondary12CardZone_GUID = \"d865d4\"\nsecondary21CardZone_GUID = \"3c8d71\"\nsecondary22CardZone_GUID = \"88cac4\"\n\nCPMissionBook_GUID = \"731ec4\"\n\n--[[\nGUID reference for primary / mission / deployment cards\nYeah, I could use variables but I didn't, oh well\n\nLeviathan:\n----------\n\nSites of Power ec78cd\nScorched Earth 3ad5a3\nPurge the Foe 5444d4\nPriority Targets f97708\nDeploy Servo-Skulls 44ff29\nTake and Hold 884291\nSupply Drop a34ae1\nThe Ritual 646b49\nVital Ground 6fc1c2\n\nChilling Rain db0022\nHidden Supplies 0dc3c3\nScrambler Fields aea986\nChosen Battlefield 876ac7\n\nHammer and Anvil 117c77\nDawn of War 7e4b95\nSweeping Engagement 381d7c\nSearch and Destroy ad4220\nCrucible of Battle 3c0679\n\nPariah Nexus:\n-------------\n\nBurden of Trust 85718e\nLinchpin 540fd0\nPurge the Foe d9d35a\nScorched Earth 6860de\nSupply Drop 981226\nTake and Hold bffd57\nTerraform 7fa6d0\nThe Ritual 7067e2\nUnexploded Ordnance 41f293\n\nAdapt or Die 9650f1\nFog of War c58f11\nHidden Supplies c4fe8c\nInspired Leadership 499169\nPrepared Positions 9789b7\nRaise Banners 62e744\nRapid Escalation d35008\nSmoke and Mirrors 25b5a6\nStalwarts 8b7dbc\nSwift Action dc273c\n\nCrucible of Battle e96d18\nDawn of War 7f45dc\nHammer and Anvil 97f3f0\nSearch and Destroy 09c961\nSweeping Engagement c6edf3\nTipping Point 77cde6\n\n]]--\n\nMISSION_PACK_LEVIATHAN = 1\nMISSION_PACK_PARIAH_NEXUS = 2\npackSelected = nil\nmissionPackData = {\n    {\n        id = MISSION_PACK_LEVIATHAN,\n        name = \"Leviathan\",\n        deploymentDeck_GUID = \"a30deb\",\n        missionDeck_GUID = \"1665ca\",\n        primaryDeck_GUID = \"3ca4a6\",\n        gambitDeck_GUID = \"d0a9f9\",\n        fixedSecondaryDeck_GUID = \"30c8fe\",\n        redSecondaryDeck_GUID = \"2c6243\",\n        blueSecondaryDeck_GUID = nil,\n        tournamentMissions = {\n            -- Take and Hold / Chilling Rain / Search and Destroy\n            {name = \"A\", primary = \"884291\", mission = \"db0022\", deployment = \"ad4220\"},\n            -- Priority Targets / Hidden Supplies / Search and Destroy\n            {name = \"B\", primary = \"f97708\", mission = \"0dc3c3\", deployment = \"ad4220\"},\n            -- The Ritual / Scrambler Fields / Sweeping Engagement\n            {name = \"C\", primary = \"646b49\", mission = \"aea986\", deployment = \"381d7c\"},\n            -- Deploy Servo-skulls / Chilling Rain / Search and Destroy\n            {name = \"D\", primary = \"44ff29\", mission = \"db0022\", deployment = \"ad4220\"},\n            -- Take and Hold / Chosen Battlefield / Sweeping Engagement\n            {name = \"E\", primary = \"884291\", mission = \"876ac7\", deployment = \"381d7c\"},\n            -- Supply Drop / Chilling Rain / Search and Destroy\n            {name = \"F\", primary = \"a34ae1\", mission = \"db0022\", deployment = \"ad4220\"},\n            -- Sites of Power / Chilling Rain / Hammer and Anvil\n            {name = \"G\", primary = \"ec78cd\", mission = \"db0022\", deployment = \"117c77\"},\n            -- The Ritual / Chilling Rain / Hammer and Anvil\n            {name = \"H\", primary = \"646b49\", mission = \"db0022\", deployment = \"117c77\"},\n            -- Take and Hold / Hidden Supplies / Hammer and Anvil\n            {name = \"I\", primary = \"884291\", mission = \"0dc3c3\", deployment = \"117c77\"},\n            -- Priority Targets / Chilling Rain / Crucible of Battle\n            {name = \"J\", primary = \"f97708\", mission = \"db0022\", deployment = \"3c0679\"},\n            -- Deploy Servo-skulls / Hidden Supplies / Crucible of Battle\n            {name = \"K\", primary = \"44ff29\", mission = \"0dc3c3\", deployment = \"3c0679\"},\n            -- Scorched Earth / Chilling Rain / Dawn of War\n            {name = \"L\", primary = \"3ad5a3\", mission = \"db0022\", deployment = \"7e4b95\"},\n            -- Purge the Foe / Chilling Rain / Crucible of Battle\n            {name = \"M\", primary = \"5444d4\", mission = \"db0022\", deployment = \"3c0679\"},\n            -- Priority Targets / Chosen Battlefield / Dawn of War\n            {name = \"N\", primary = \"f97708\", mission = \"876ac7\", deployment = \"7e4b95\"},\n            -- Vital Ground / Chilling Rain / Crucible of Battle\n            {name = \"O\", primary = \"6fc1c2\", mission = \"db0022\", deployment = \"3c0679\"}\n        }\n    },\n    {\n        id = MISSION_PACK_PARIAH_NEXUS,\n        name = \"Pariah Nexus\",\n        deploymentDeck_GUID = \"2dc2e8\",\n        missionDeck_GUID = \"ffdf05\",\n        primaryDeck_GUID = \"d26e9c\",\n        gambitDeck_GUID = \"79d2ae\",\n        fixedSecondaryDeck_GUID = \"b55459\",\n        redSecondaryDeck_GUID = \"c0fb49\",\n        blueSecondaryDeck_GUID = nil,\n        tournamentMissions = {\n            -- A: Take and Hold / Raise Banners / Tipping Point\n            {name = \"A\", primary = \"bffd57\", mission = \"62e744\", deployment = \"77cde6\"},\n            -- B: Purge the Foe / Smoke and Mirrors / Tipping Point\n            {name = \"B\", primary = \"d9d35a\", mission = \"25b5a6\", deployment = \"77cde6\"},\n            -- C: Linchpin / Fog of War / Tipping Point\n            {name = \"C\", primary = \"540fd0\", mission = \"c58f11\", deployment = \"77cde6\"},\n            -- D: Scorched Earth / Swift Action / Tipping Point\n            {name = \"D\", primary = \"6860de\", mission = \"dc273c\", deployment = \"77cde6\"},\n            -- E: Take and Hold / Prepared Positions / Hammer and Anvil\n            {name = \"E\", primary = \"bffd57\", mission = \"9789b7\", deployment = \"97f3f0\"},\n            -- F: Burden of Trust / Hidden Supplies / Hammer and Anvil\n            {name = \"F\", primary = \"85718e\", mission = \"c4fe8c\", deployment = \"97f3f0\"},\n            -- G: The Ritual / Stalwarts / Hammer and Anvil\n            {name = \"G\", primary = \"7067e2\", mission = \"8b7dbc\", deployment = \"97f3f0\"},\n            -- H: Supply Drop / Smoke and Mirrors / Hammer and Anvil\n            {name = \"H\", primary = \"981226\", mission = \"25b5a6\", deployment = \"97f3f0\"},\n            -- I: Burden of Trust / Prepared Positions / Search and Destroy\n            {name = \"I\", primary = \"85718e\", mission = \"9789b7\", deployment = \"09c961\"},\n            -- J: Linchpin / Raise Banners / Search and Destroy\n            {name = \"J\", primary = \"540fd0\", mission = \"62e744\", deployment = \"09c961\"},\n            -- K: Scorched Earth / Stalwarts / Search and Destroy\n            {name = \"K\", primary = \"6860de\", mission = \"8b7dbc\", deployment = \"09c961\"},\n            -- L: Take and Hold / Hidden Supplies / Search and Destroy\n            {name = \"L\", primary = \"bffd57\", mission = \"c4fe8c\", deployment = \"09c961\"},\n            -- M: Purge the Foe / Rapid Escalation / Crucible of Battle\n            {name = \"M\", primary = \"d9d35a\", mission = \"d35008\", deployment = \"e96d18\"},\n            -- N: The Ritual / Swift Action / Crucible of Battle\n            {name = \"N\", primary = \"7067e2\", mission = \"dc273c\", deployment = \"e96d18\"},\n            -- O: Terraform / Stalwarts / Crucible of Battle\n            {name = \"O\", primary = \"7fa6d0\", mission = \"8b7dbc\", deployment = \"e96d18\"},\n            -- P: Scorched Earth / Inspired Leadership / Crucible of Battle\n            {name = \"P\", primary = \"6860de\", mission = \"499169\", deployment = \"e96d18\"},\n            -- Q: Supply Drop / Rapid Escalation / Sweeping Engagement\n            {name = \"Q\", primary = \"981226\", mission = \"d35008\", deployment = \"c6edf3\"},\n            -- R: Terraform / Swift Action / Sweeping Engagement\n            {name = \"R\", primary = \"7fa6d0\", mission = \"dc273c\", deployment = \"c6edf3\"},\n            -- S: Linchpin / Raise Banners / Dawn of War\n            {name = \"S\", primary = \"540fd0\", mission = \"62e744\", deployment = \"7f45dc\"},\n            -- T: Unexploded Ordnance / Inspired Leadership / Dawn of War\n            {name = \"T\", primary = \"41f293\", mission = \"499169\", deployment = \"7f45dc\"}\n        }\n    },\n}\n\nturnOrder = {}\nnonPlaying = {\"White\", \"Brown\",\"Orange\",\"Yellow\",\"Green\",\"Teal\",\"Purple\",\"Pink\"}\nallowMenu = true\nallowAutoSeat = true\nredPlayerID = \"\"\nbluePlayerID = \"\"\nredDiceSpawnTime = \"slow\"\nblueDiceSpawnTime = \"slow\"\n\nfunction onSave()\n    blueSecondaryDeckGUID = nil\n    if packSelected then\n        blueSecondaryDeckGUID = missionPackData[packSelected].blueSecondaryDeck_GUID\n    end\n    saved_data = JSON.encode({\n        svredPlayerID = redPlayerID,\n        svbluePlayerID = bluePlayerID,\n        svPackSelected = packSelected,\n        svBlueSecondaryDeckGUID = blueSecondaryDeckGUID\n    })\n    --saved_data = \"\"\n    return saved_data\nend\n\nfunction onLoad(saved_data)\n    Turns.enable=false\n    --- load vars from saved\n    if saved_data ~= \"\" then\n         local loaded_data = JSON.decode(saved_data)\n         redPlayerID = loaded_data.svredPlayerID\n         bluePlayerID = loaded_data.svbluePlayerID\n         packSelected = loaded_data.svPackSelected\n         if packSelected then\n            missionPackData[packSelected].blueSecondaryDeck_GUID = loaded_data.svBlueSecondaryDeckGUID\n         end\n    else\n        redPlayerID = \"\"\n        bluePlayerID = \"\"\n        packSelected = nil\n    end\n    ---- end loading\n    if allowMenu then\n        if allowAutoSeat and redPlayerID ~= \"\" and bluePlayerID ~= \"\" then --  if the game is not started dont autoseat\n                autoSeatAll()\n        else\n            Global.UI.setAttribute(\"main\", \"active\", \"true\")\n            local presentPersons= Player.getPlayers()\n            for i, person in ipairs(presentPersons) do\n                person.team=\"Diamonds\"\n            end\n            presentPersons= Player.getSpectators()\n            for i, person in ipairs(presentPersons) do\n                person.team=\"Diamonds\"\n            end\n            showHideRedBlueBtn()\n        end\n    else\n        Global.UI.setAttribute(\"main\", \"active\", \"false\")\n    end\nend\n\nfunction setMissionPack(params)\n    packSelected = params.pack\n    redSecondaryDeck = getObjectFromGUID(missionPackData[packSelected].redSecondaryDeck_GUID)\n    blueSecondaryDeck = redSecondaryDeck.clone({position = redSecondaryDeck.getPosition()})\n    missionPackData[packSelected].blueSecondaryDeck_GUID = blueSecondaryDeck.getGUID()\nend\n\nfunction autoSeatPerson(_person)\n    if _person.steam_id == redPlayerID then\n        if Player.Red.seated then\n            Player.Red.changeColor(\"Grey\")\n        end\n        _person.changeColor(\"Red\")\n        _person.team=\"None\"\n        return\n    end\n    if _person.steam_id == bluePlayerID then\n        if Player.Blue.seated then\n            Player.Blue.changeColor(\"Grey\")\n        end\n        _person.changeColor(\"Blue\")\n        _person.team=\"None\"\n        return\n    end\n    --_person.changeColor(\"Grey\")\n    _person.team=\"None\"\nend\n\nfunction autoSeatGroup(persons)\n    for i, person in ipairs(persons) do\n        autoSeatPerson(person)\n    end\nend\n\nfunction autoSeatAll()\n    if redPlayerID==\"\" or bluePlayerID==\"\" then --  if the game is not started dont autoseat\n        return\n    end\n    local presents = Player.getPlayers()\n    autoSeatGroup(presents)\n    presents = Player.getSpectators()\n    autoSeatGroup(presents)\nend\n\nfunction recordPlayers()\n    redPlayerID = Player.Red.steam_id\n    bluePlayerID = Player.Blue.steam_id\nend\n\nfunction onPlayerChangeColor(player_color)\n    promotePlayers()\n    --demotePlayers()  -- RIC\n    showHideRedBlueBtn()\nend\n\nfunction onPlayerConnect(player_id)\n    if allowMenu then\n        if allowAutoSeat and redPlayerID ~= \"\" and bluePlayerID ~= \"\" then --  if the game is not started dont autoseat\n                autoSeatPerson(player_id)\n        else\n        player_id.team=\"Diamonds\"\n        end\n    end\nend\n\nfunction promotePlayers()\n    local colors={\"Red\", \"Blue\", \"Orange\", \"Yellow\", \"Purple\", \"Teal\"}\n    for i, color in ipairs(colors) do\n        if Player[color].seated and  Player[color].host == false and not Player[color].promoted then\n            Player[color].promote()\n        end\n    end\nend\n\nfunction demotePlayers()\n    for i, color in ipairs(nonPlaying) do\n        if Player[color].seated  and Player[color].host == false then\n            Player[color].promote(false)\n        end\n    end\n    local spectators=Player.getSpectators()\n    for i, person in ipairs(spectators) do\n        if person.host == false then\n            person.promote(false)\n        end\n    end\nend\n\nfunction promotePlayersOnConnect()  --NOT USED\n    if player_color == \"Red\" or player_color == \"Blue\"  then\n        Player[\"Red\"].promote(true)\n        Player[\"Blue\"].promote(true)\n    end\nend\n\nfunction showHideRedBlueBtn()\n    if allowMenu then\n        if Player.Red.seated == true then\n            Global.UI.setAttribute(\"redBtn\", \"active\", \"false\")\n        else\n            Global.UI.setAttribute(\"redBtn\", \"active\", \"true\")\n        end\n        if Player.Blue.seated == true then\n            Global.UI.setAttribute(\"blueBtn\", \"active\", \"false\")\n        else\n            Global.UI.setAttribute(\"blueBtn\", \"active\", \"true\")\n        end\n    end\nend\n\nfunction setViewForPlayer(player, color)\n    if color==\"Grey\" then return end\n    local pos= {0,0,0}\n    if color == \"Red\" then\n        pos = getObjectFromGUID(redDiceMat_GUID).getPosition()\n    end\n    if color == \"Blue\" then\n        pos = getObjectFromGUID(blueDiceMat_GUID).getPosition()\n    end\n    player.lookAt({\n        position = pos,\n        pitch    = 25,\n        yaw      = 180,\n        distance = 20,\n        })\nend\n\nfunction onScriptingButtonDown(index, playerColor)\n    if index == 1 then\n        -- If '=' is bound to scripting button 1\n        local diceMat = getObjectFromGUID(redCustomDiceMat_GUID)\n        diceMat.call(\"changeSustainedHitsThreshold\", { 1 })\n    elseif index == 2 then\n        -- If '-' is bound to scripting button 2\n        local diceMat = getObjectFromGUID(redCustomDiceMat_GUID)\n        diceMat.call(\"changeSustainedHitsThreshold\", { -1 })\n    end\nend\n\nfunction placeToColor(player, color)\n    player.changeColor(color)\n    player.team=\"None\"\n    broadcastToColor(\"READ INSTRUCTIONS FIRST!\\n(Click Notebook at the top)\", color, \"Purple\")\n    --setViewForPlayer(player, color) --bugged\nend\n\nfunction placeToRed(player, value, id)\n    placeToColor(player, \"Red\")\n    --player.changeColor(\"Red\")\n    --player.team=\"None\"\nend\n\nfunction placeToBlue(player, value, id)\n    placeToColor(player, \"Blue\")\n    --player.changeColor(\"Blue\")\n    --player.team=\"None\"\nend\nfunction placeToGray(player, value, id)\n    placeToColor(player, \"Grey\")\n    local selectPariahNexus = Global.getVar(\"selectPariahNexus\")\n    if selectPariahNexus then\n        selectPariahNexus()\n    else\n        print(\"Error: selectPariahNexus function not found!\")\n    end\nend\n\nfunction closeMenu(player, value, id)\n    player.team=\"None\"\n    broadcastToColor(\"READ INSTRUCTIONS FIRST!\\n(Click Notebook at the top)\", player.color, \"Purple\")\nend\n\nbackPosition={{0,0,0},{0,0,0},{0,0,0},{0,0,0}}\nfunction goToDiceRoller(player)\n    local matPositionOffset=12\n    local color=player.color\n    local diceMatGUID=redDiceMat_GUID\n    local i=1\n    if color == \"Red\" then\n        i=1\n    end\n    if color == \"Orange\" then\n        i=2\n    end\n    if color == \"Blue\" then\n        diceMatGUID = blueDiceMat_GUID\n        i=3\n        matPositionOffset=-matPositionOffset\n    end\n    if color == \"Teal\" then\n        diceMatGUID = blueDiceMat_GUID\n        i=4\n        matPositionOffset=-matPositionOffset\n    end\n    if Player[color].getSelectedObjects()[1] ~= nil then\n        backPosition[i]=Player[color].getSelectedObjects()[1].getPosition()\n    end\n\n    local matPos=getObjectFromGUID(diceMatGUID).getPosition()\n    matPos.x=matPos.x+matPositionOffset\n    moveCameraTo(matPos,30,color)\nend\nfunction goToScoreBoard(player)\n    local matPositionOffset = 0 -- Define matPositionOffset with a default value\n    local color = player.color\n    local matPos = getObjectFromGUID(\"06d627\").getPosition()\n    matPos.x = matPos.x + matPositionOffset\n     moveCameraTo(matPos, 30, color, 90)\nend\n\nfunction goToSquad(player)\n    local i = 1\n    local color=player.color\n    if color == \"Red\" then\n        i=1\n    end\n    if color == \"Orange\" then\n        i=2\n    end\n    if color == \"Blue\" then\n        i=3\n    end\n    if color == \"Teal\" then\n        i=4\n    end\n    moveCameraTo(backPosition[i], 20, color)\nend\n\nfunction moveCameraTo(pos, dist, color, pitchOverride)\n    local rot = {0, 0, 0} -- Default rotation\n\n    if color == \"Red\" or color == \"Orange\" then\n        rot = {0, 180, 0}\n    elseif color == \"Blue\" or color == \"Teal\" then\n        rot = {0, 0, 0}\n    end\n\n    if pos[2] == 0 then\n        dist = dist + 30\n    end\n\n    local yaw = pitchOverride or rot[2]\n\n    Player[color].lookAt({\n        position = pos,\n        pitch = 90,\n        yaw = yaw,\n        distance = dist\n    })\nend\n\nfunction moveAllFromZoneToDeck(params)\n    local zoneObj = getObjectFromGUID(Global.getVar(params.zone .. \"CardZone_GUID\"))\n    local deckObj = getObjectFromGUID(missionPackData[packSelected][params.deck .. \"Deck_GUID\"])\n\n    local objects = zoneObj.getObjects()\n    for _,object in ipairs(objects) do\n        object.locked = false\n        deckObj.putObject(object)\n    end\n\n    deckObj.shuffle()\nend\n\nfunction moveOneFromDeckToZone(params)\n    local zoneObj = getObjectFromGUID(Global.getVar(params.zone .. \"CardZone_GUID\"))\n    local deckObj = getObjectFromGUID(missionPackData[packSelected][params.deck .. \"Deck_GUID\"])\n    local takeParams = {}\n    takeParams.position = zoneObj.getPosition()\n    takeParams.flip = true\n    takeParams.smooth = true\n    takeParams.callback_function = function(card)\n        Wait.frames(function()\n            card.locked = true\n        end)\n    end\n    if params[\"card\"] then\n        takeParams.guid = params.card\n    else\n        deckObj.shuffle()\n    end\n    deckObj.takeObject(takeParams)\nend\n"
        }
    ]
}