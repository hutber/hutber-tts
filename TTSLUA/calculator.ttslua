-- FTC-GUID: 7cab7a

local displayText = ""
local numpadButtons = {
    { "7", "8", "9", "C" },
    { "4", "5", "6", "0" },
    { "1", "2", "3", "←" },
    { "+", "-", "*", "/" },
    { "Enter" }
}

local buttonWidth = 400
local buttonHeight = 300
local fontSize = 150
local spacing = 450
local startX = -800
local startY = 1000

function onLoad()
    createNumpad()
    createDisplay()
end

function createNumpad()
    for rowIndex, row in ipairs(numpadButtons) do
        for colIndex, button in ipairs(row) do
            local posX = startX + (colIndex - 1) * spacing
            local posY = startY - (rowIndex - 1) * spacing

            self.createButton({
                label = button,
                click_function = "numpadClick",
                function_owner = self,
                position = { posX / 1000, 0.2, posY / 1000 },
                rotation = { 0, 0, 0 },
                width = buttonWidth,
                height = buttonHeight,
                font_size = fontSize,
                color = { 0.2, 0.2, 0.2 },
                font_color = { 1, 1, 1 },
                tooltip = "Click " .. button,
                parameters = { tostring(button) }  -- Ensure parameter is a string
            })
        end
    end
end

function createDisplay()
    self.createButton({
        label = displayText ~= "" and displayText or "0",
        click_function = "doNothing",
        function_owner = self,
        position = { 0, 0.2, startY / 1000 + 0.5 },
        rotation = { 0, 0, 0 },
        width = 1800,
        height = 400,
        font_size = fontSize,
        color = { 0, 0, 0 },
        font_color = { 1, 1, 1 },
        tooltip = "Display Area"
    })
end

function numpadClick(_, _, input)
    local inputStr = tostring(input or "")  -- Ensure input is always a string

    if inputStr == "C" then
        displayText = ""
    elseif inputStr == "←" then
        displayText = displayText:sub(1, -2)
    elseif inputStr == "Enter" then
        local result, err = load("return " .. displayText)
        if result then
            local success, evaluated = pcall(result)
            if success then
                displayText = tostring(evaluated)
            else
                displayText = "Error"
            end
        else
            displayText = "Error"
        end
    else
        displayText = displayText .. inputStr
    end

    updateDisplay()
end

function updateDisplay()
    self.editButton({
        index = 0,
        label = displayText ~= "" and displayText or "0"  -- Show 0 if empty
    })
end

function doNothing()
    -- Placeholder function to prevent interaction with display
end
