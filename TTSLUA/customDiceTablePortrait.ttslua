-- Portrait dice table with number pad input

local inputValue = ""

-- helper to find dice in table area
local function getDice()
    local dice = {}
    local b = self.getBounds()
    local c = b.center
    local sx, sy, sz = b.size.x / 2, b.size.y / 2, b.size.z / 2
    for _, obj in ipairs(getAllObjects()) do
        if obj.tag == "Dice" then
            local p = obj.getPosition()
            if math.abs(p.x - c.x) <= sx and math.abs(p.z - c.z) <= sz and math.abs(p.y - c.y) <= sy + 2 then
                table.insert(dice, obj)
            end
        end
    end
    return dice
end

local function spawnDice(n, color)
    for i = 1, n do
        local pos = self.positionToWorld({0.5, 1, -0.5 - (i*0.3)})
        local die = spawnObject({type = 'Die_6', position = pos})
        if color == "Red" or color == "Blue" then
            die.setColorTint(color)
        end
    end
end

function rollAllDice()
    for _, die in ipairs(getDice()) do
        die.randomize()
    end
end

function clearAllDice()
    for _, die in ipairs(getDice()) do
        die.destroy()
    end
end

function numpadInput(_, player, value)
    inputValue = value
end

local function appendDigit(digit, player)
    inputValue = inputValue .. digit
    self.editInput({index = 0, value = inputValue})
end

local function handleDigit(digit, player, alt)
    if alt then
        spawnDice(tonumber(digit), player)
    else
        appendDigit(digit, player)
    end
end

function spawnFromInput(_, player)
    local n = tonumber(inputValue)
    if n then
        spawnDice(n, player)
    else
        printToColor("Enter a number first", player, "Red")
    end
    inputValue = ""
    self.editInput({index = 0, value = ""})
end

for i = 0,9 do
    _G["digit"..i] = function(obj, player, alt)
        handleDigit(tostring(i), player, alt)
    end
end

function onload()
    -- rotate to portrait orientation
    local r = self.getRotation()
    self.setRotation({r.x, r.y + 90, r.z})
    createUI()
end

function createUI()
    local y = 0.1
    -- input
    self.createInput({
        input_function = 'numpadInput',
        position = {-0.6, y, 0.8},
        width = 600, height = 200,
        font_size = 150, alignment = 3,
        value = ''
    })
    -- spawn button
    self.createButton({label='Spawn', click_function='spawnFromInput', position={0.6, y, 0.8}, width=300, height=200, font_size=150})
    -- roll and clear
    self.createButton({label='Roll All', click_function='rollAllDice', position={-0.6, y, 1.2}, width=600, height=200, font_size=130})
    self.createButton({label='Clear', click_function='clearAllDice', position={0.6, y, 1.2}, width=300, height=200, font_size=130})
    -- numpad digits
    local startX, startZ = -0.6, 0.4
    local dx, dz = 0.6, -0.5
    local digits = {1,2,3,4,5,6,7,8,9}
    for idx, d in ipairs(digits) do
        local col = (idx-1)%3
        local row = math.floor((idx-1)/3)
        local pos = {startX + col*dx, y, startZ + row*dz}
        self.createButton({label=tostring(d), click_function='digit'..d, tooltip='LMB add, RMB spawn', position=pos, width=300, height=250, font_size=150})
    end
    self.createButton({label='0', click_function='digit0', tooltip='LMB add, RMB spawn', position={startX+dx, y, startZ+3*dz}, width=300, height=250, font_size=150})
    self.createButton({label='Clr', click_function='clearInput', position={startX, y, startZ+3*dz}, width=300, height=250, font_size=150})
end

function clearInput()
    inputValue = ''
    self.editInput({index = 0, value = ''})
end
