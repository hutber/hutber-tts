-- FTC-GUID: 4baba1,6948e5

    function onLoad()
        self.createButton({
            label = "Load Map",
            font_size = 115,
            color = {0, 1, 0,},
            position = {-0.96, 0.5, 0},
            rotation = {0, 90, 0},
            scale = {1.3, 1, .7},
            width = 570,
            height = 160,
            click_function = "loadMap",
            function_owner = self,
        })

        self.createButton({
            label = "Clear Map",
            font_size = 100,
            position = {1, 0.5, 0},
            rotation = {0, 90, 0},
            scale = {.6, .6, .4},
            width = 530,
            height = 130,
            color = {1, 0, 0},
            click_function = "clearMap",
            function_owner = self,
        })
    end

    -------------------
    -- Prepares the terrain saved into the card from Map Saver tool
    string.split = function(s, delimiter)
        local result = { }
        local from  = 1
        local delim_from, delim_to = string.find( s, delimiter, from  )
        while delim_from do
            table.insert( result, string.sub( s, from , delim_from-1 ) )
            from  = delim_to + 1
            delim_from, delim_to = string.find( s, delimiter, from  )
        end
        table.insert( result, string.sub( s, from  ) )
        return result
    end

	function scriptzoneCallback(zone) --This deletes everything except the things listed, when the scripting zone is briefly spawned.

        local objects = zone.getObjects()

        for i, obj in ipairs(objects) do
            if obj.getGUID() ~= "e7ca6e" --Exclude Map Buidler Table
                and
                obj.getGUID() ~= "6012bf" --...and ForceOrg Table...
                and
                obj.getGUID() ~= "4ee1f2" --...and FTC board matObjSurface
                and
                obj.getGUID() ~= "948ce5" --...and FTC Table
                and
                obj.getGUID() ~= "28865a" --...and FTC Felt Surface
                then
                obj.destruct()
            end
        end
        zone.destruct()
    end
    function loadMap(objectClicked, clickerColor, altClickUsed)
        -------------------
        -- Spawn the scripting zone, which uses the callback above that deletes everything then deletes itself.
        local scriptzoneParams = {                  -- Define the parameters for the scripting zone
            position = {x=0, y=26, z=0},
            --scale = {x=30.15, y=73, z=22.03}, --Kill Team Size
            --scale = {x=30.15, y=73, z=44.04}, --Incursion and Combat Patrol Size
            scale = {x=60.12, y=73, z=44.04}, --Strike Force Size
            --scale = {x=90.07, y=73, z=44.04}, --Onslaught Size
            type = 'ScriptingTrigger',              -- Use the ScriptingTrigger type to spawn a Scripting Zone
            callback_function = scriptzoneCallback, -- Specify the function to call when the zone is created
            callback_owner = self,
            }

		spawnObject(scriptzoneParams)
		-- Then Sspawn the objects stored in the card

        Wait.time(
        function()
            for _, objectJSON in ipairs(objectJSONs) do
                -- Spawn the map from the JSON data
                spawnObjectJSON({
                    json = objectJSON
                })
            end
        end, .5)
    end

    -----------------------------------------------------------------------------------------------------------------
    -- This function runs when the Clear Map button is clicked on the Map Card
    function clearMap(objectClicked, clickerColor, altClickUsed)
        local scriptzoneParams = {                  -- Define the parameters for the scripting zone
            position = {x=0, y=26, z=0},
            --scale = {x=30.15, y=73, z=22.03}, --Kill Team Size
            --scale = {x=30.15, y=73, z=44.04}, --Incursion and Combat Patrol Size
            scale = {x=60.12, y=73, z=44.04}, --Strike Force Size
            --scale = {x=90.07, y=73, z=44.04}, --Onslaught Size
            type = 'ScriptingTrigger',              -- Use the ScriptingTrigger type to spawn a Scripting Zone
            callback_function = scriptzoneCallback, -- Specify the function to call when the zone is created
            callback_owner = self,
            }

        spawnObject(scriptzoneParams)
    end


objectJSONs = {
    [[]],
}

